# .github/workflows/generate_markdown.yml

name: Generate Markdown files from JSON Schema

on: push

jobs:
  generate-markdown:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Create docs/schema directory if it doesn't exist
        run: |
          mkdir -p docs/schema

      - name: Find JSON Schema files and Generate Markdown
        run: |
          # Embedded Python script to generate .md files from JSON Schema
          python << 'EOF'
          import json
          import os
          
          def generate_markdown(schema, md_file_path):
              with open(md_file_path, 'w') as md_file:
                  md_file.write(f"# {schema.get('title', 'Untitled')}\n\n")
                  md_file.write(f"{schema.get('description', 'No description available.')}\n\n")
                  md_file.write("## Properties\n\n")
                  md_file.write("| Property | Type | Description |\n")
                  md_file.write("|----------|------|-------------|\n")
                  properties = schema.get('properties', {})
                  for prop, details in properties.items():
                      md_file.write(f"| {prop} | {details.get('type', 'Any')} | {details.get('description', 'N/A')} |\n")
          
          for root, dirs, files in os.walk("."):
              for file in files:
                  if file.endswith("schema.json"):
                      schema_file_path = os.path.join(root, file)
                      with open(schema_file_path, 'r') as f:
                          schema = json.load(f)
                      md_file_name = os.path.basename(schema_file_path).replace("schema.json", "md")
                      md_file_path = os.path.join("docs/schema", md_file_name)
                      generate_markdown(schema, md_file_path)
          EOF
      - name: Git commit
        run: |
          git config user.name "GitHub Actions"
          git config user.email ""
          git add .
          git commit -m "Created mardown files for schema's" || echo "No changes to commit"
          git pull origin $(git rev-parse --abbrev-ref HEAD) --rebase --autostash
          git push
